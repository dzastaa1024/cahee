{"version":3,"sources":["Header/components/Item/index.js","Header/index.js","About/index.js","components/Button/index.js","Blog/index.js","Contact/index.js","Gallery/index.js","Home/index.js","Services/Service.js","Services/index.js","Subscribe/index.js","App/index.js","serviceWorker.js","index.js"],"names":["Item","_ref","label","href","react_default","a","createElement","className","Header","map","item","components_Item","key","About","id","Button","props","text","Blog","components_Button","state","name","email","phone","message","handleChange","e","_this","setState","Object","defineProperty","target","value","type","placeholder","this","onChange","rows","Component","Gallery","Home","Service","icon","Services","Services_Service","index_esm","Subscribe","subscribe","App","src_Header","src_Home","src_About","src_Services","src_Gallery","src_Subscribe","src_Blog","Contact","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ad6508d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Item = ({label, href}) => {\n  return (\n    <a className=\"nav-item\" href={href}>\n        {label}\n    </a>\n  );\n}\n\nexport default Item;","import React from 'react';\nimport Item from './components/Item';\nimport './styles.scss';\n\nconst Header = () => {\n    const items = [\n        {\n            label: 'Home',\n            href: '#home'\n        },\n        {\n            label: 'About',\n            href: '#about'\n        },\n        {\n            label: 'Services',\n            href: '#services'\n        },\n        {\n            label: 'Gallery',\n            href: '#gallery'\n        },\n        {\n            label: 'Blog',\n            href: '#blog'\n        },\n        {\n            label: 'Contact',\n            href: '#contact'\n        },\n\n    ]\n\n  return (\n    <header className=\"header\">\n     <h4 className=\"header__title\">Cahee</h4>\n     <nav className=\"header__navigation\">\n         {items.map(item => <Item key={item.label} label={item.label} href={item.href}/>)}\n     </nav>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport \"./style.scss\";\n\n\nconst About = () =>  {\n  return (\n    <section className=\"section-about\" id=\"about\">\n      \n      <div className='row'>\n        <div className='col'>\n          <div className='picture'></div>\n        </div>\n        <div className='col'>\n          <div className=\"box-content\">\n             <h2 className='heading-primary heading-primary--light'>About Us</h2>\n             <p className='paragraph paragraph--light'>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard.Lorem Ipsum is simply dummy text of the printing and typesetting industry.Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>\n             <p className='paragraph paragraph--light'>Lorem Ipsum is simply dummy text of the printing and typesettin.Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>\n             \n          </div>\n        </div>\n\n      </div>\n    </section>\n  );\n}\n\nexport default About;","import React from 'react';\nimport \"./style.scss\";\n\nconst Button = (props) => {\n    return (\n        <a href=\"#\" className=\"btn\">{props.text}</a>\n    )\n}\n\nexport default Button;","import React from 'react';\nimport Button from '../components/Button';\nimport \"./style.scss\";\n\nconst Blog = () => {\n  return (\n    <section className=\"section-blog\" id=\"blog\">\n      <h2 className='heading-primary heading-primary--light center'>Blog</h2>\n      <p className='paragraph paragraph--light paragraph--center '>Lorem Ipsum the industry's when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.</p>\n      <div className=\"picture-box\">\n        <div className=\"pic pic--1\"></div>\n        <div className=\"pic pic--2\"></div>\n        <div className=\"pic pic--3\"></div>\n      </div>\n      <Button text=\"VIEW MORE\"/>\n    </section>\n  );\n}\n\nexport default Blog;","import React, {Component} from 'react';\nimport \"./style.scss\";\n\n\nclass Blog extends Component  {\n\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    message: '',\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  render() {\n    return (\n      <section className=\"section-contact\" id=\"contact\">\n        <h2 className='heading-primary center'>Contact</h2>\n        <p className='paragraph paragraph--center'>It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.</p>\n        <div className='row'>\n          <div className='col'>\n            <form className='form'> \n              <input className='form__field' name='name' type=\"text\" placeholder='Your name...' value={this.state.name} onChange={this.handleChange}/>\n              <input className='form__field' name='email' type=\"email\" placeholder='Your email address...' value={this.state.email} onChange={this.handleChange}/>\n              <input className='form__field' name='phone' type=\"phone\" placeholder='Your phone number...' value={this.state.phone} onChange={this.handleChange}/>\n              <textarea rows={7} className='form__field form__textarea' name='message' placeholder='Your message...' value={this.state.message} onChange={this.handleChange}></textarea>\n            </form>\n          </div>\n          <div className='col'>\n            <div>\n              <p className='paragraph'>\n                <strong>Name: </strong>\n                {this.state.name}\n              </p>\n              <p className='paragraph'>\n                <strong>E-mail: </strong>\n                {this.state.email}\n              </p>\n              <p className='paragraph'>\n                <strong>Phone: </strong>\n                {this.state.phone}\n              </p>\n             \n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Blog;","import React from 'react';\nimport Button from '../components/Button';\nimport \"./style.scss\";\n\nconst Gallery = () => {\n  return (\n    <section className=\"section-gallery center\" id=\"gallery\">\n      <h2 className='heading-primary center'>Gallery</h2>\n      <p className='paragraph paragraph--center'>Lorem Ipsum the industry's when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.</p>\n      <div className=\"picture-box\">\n        <div className=\"pic pic--1\"></div>\n        <div className=\"pic pic--2\"></div>\n        <div className=\"pic pic--3\"></div>\n        <div className=\"pic pic--4\"></div>\n        <div className=\"pic pic--5\"></div>\n      </div>\n      <Button text=\"VIEW MORE\"/>\n    </section>\n  );\n}\n\nexport default Gallery;","import React from 'react';\nimport Button from '../components/Button';\nimport \"./style.scss\";\n\nconst Home = () =>  {\n  return (\n    <section className=\"section-home\" id=\"home\">\n      <div className='row'>\n        <div className='col'>\n          <div className=\"box-content\">\n             <h2 className='heading-primary'>Fresh Life</h2>\n             <p className='paragraph'>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.</p>\n             <Button text=\"Get free now\"/>\n          </div>\n        </div>\n        <div className='col'>\n          <div className='picture' />\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Home;","import React from 'react';\nimport \"./style.scss\";\n\nconst Service = (props) => {\n    return (\n        <div className=\"service-box\">\n            <span className=\"service-box__text\">{props.text}</span>\n            <span className=\"service-box__icon\">{props.icon}</span>\n        </div>\n    )\n}\n\nexport default Service;","import React from 'react';\nimport {FaCartArrowDown, FaCarrot, FaGlobeEurope, FaFish} from \"react-icons/fa\";\nimport Service from './Service';\nimport \"./style.scss\";\n\n\nconst Services = () =>  {\n  return (\n    <section className=\"section-services\" id=\"services\">\n      \n      <div className='row'>\n        <div className='col'>\n          <div className=\"box-content\">\n            <Service text='Online Shopping' icon={<FaCartArrowDown/>}/>\n            <Service text='Quality Product'icon={<FaCarrot/>}/>\n            <Service text='Domestic and International Delivery' icon={<FaGlobeEurope/>}/>\n            <Service text='Well Organized' icon={<FaFish/>}/>\n          </div>\n        </div>\n        <div className='col'>\n          <div className='picture'>\n            <h2 className='heading-primary'>Our Services</h2>\n          </div>\n        </div>\n\n      </div>\n    </section>\n  );\n}\n\nexport default Services;","import React, {Component} from  'react';\nimport Button from '../components/Button';\nimport \"./style.scss\";\n\nclass Subscribe extends Component  {\n  state = {\n    subscribe: '',\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  render() {\n    return (\n      <section className=\"section-subscribe\">\n        <div className='row'>\n          <div className='col'>\n            <h2 className='heading-primary'>Subscribe To Us</h2>\n            <p className='paragraph'>When an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.</p>\n            <form className=\"form\">\n              <input\n                className='form__field'\n                name='subscribe'\n                type='emial'\n                placeholder='Your email adress...'\n                value={this.state.subscribe}\n                onChange={this.handleChange}\n              />\n              <Button text=\"Get free now\"/>\n            </form>\n          </div>\n          <div className='col'>\n            <div className='picture' />\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Subscribe;","import React from 'react';\nimport Header from '../Header';\nimport About from '../About';\nimport Blog from '../Blog';\nimport Contact from '../Contact';\nimport Gallery from '../Gallery';\nimport Home from '../Home';\nimport Services from '../Services';\nimport Subscribe from '../Subscribe';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n     <Header />\n     <Home />\n     <About />\n     <Services  />\n     <Gallery />\n     <Subscribe />\n     <Blog />\n     <Contact />\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/main.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}